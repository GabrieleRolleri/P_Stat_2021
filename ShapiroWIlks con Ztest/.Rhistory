fix(P)
summary(factor(P$discoverymethod))
summary(as.factor(P$discoverymethod)
=
summary(as.factor(P$discoverymethod))
summary(factor(P))
summary(factor(P$discoverymethod)
)
summary(factor(P$discoverymethod))
fix(P)
fix(P)
shapiro.test(P$pl_eqt)
hist(P$pl_eqt,col='blue')
fix(P)
Tst_1<-subset(P$pl_eqt,P$sy_snum)
Tst_1<-subset(P$pl_eqt,sy_snum=1)
Tst_1<-subset(P,sy_snum=1,select=c(t_eqt))
fix(P)
Tst_1<-subset(P,sy_snum=1,select=c(pl_eqt))
Tst_1
shapiro.test(Tst_1)
na.omit(Tst_1)
shapito.test(Tst_1)
 shapiro.test(Tst_1)
shapiro.test(Tst_1$pl_eqt)
Tst_2<-subset(P,sy_snum=2,select=c(pl_eqt))
na.omit(Tst_2)
shapiro.test(Tst_2$pl_eqt)
ls(9
)
ls()
Tst_3<-subset(P,sy_snum=3,select=c(pl_eqt))
na.omit(Tst_2)
shapiro.test(Tst_3$pl_eqt)
fix(Tst_1)
Tst_1<-subset(P,sy_snum==1,select=c(pl_eqt))
Tst_1
fix(P)
na.omit(Tst_1)
shapiro.test(Tst_1)
shapiro.test(Tst_1$pl_eqt)
Tst_2<-subset(P,sy_snum==2,selec=c(pl_eqt))
na_omit(Tst_2)
na.omit(Tst_2)
shapiro.test(Tst_2$pl_eqt)
Tst_3<-subset(P,sy_snum==3,select=c(pl_eqt))
na.omit(Tst_3)
shapiro.test(Tst_3)
shapiro.test(Tst_3$pl_eqt)
Tst_4<-subset(P,sy_snum==4,select=c(pl_eqt))
na.omit(Tst_4)
hist(Tst_1)
hist(Tst_1$pl_eqt)
hist(Tst_1$pl_eqt,col="red")
qqplot(x, Tst_1$pl_eqt, xlab = "Normal Distribution", ylab = "Tst_1", main = "Q-Q Plot")
x=rnorm(100, 50, 25)
x = rnorm(50, 50, 20)qqplot(x, Tst_1$pl_eqt, xlab = "Normal Distribution", ylab = "Tst_1", main = "Q-Q Plot")
qqplot(x, Tst_1$pl_eqt, xlab = "Normal Distribution", ylab = "Tst_1", main = "Q-Q Plot")
library("car")
qqnorm(my_data$len, pch = 1, frame = FALSE)
qqline(my_data$len, col = "steelblue", lwd = 2)
qqnorm(Tst_1$pl_eqt, pch = 1, frame = FALSE)
qqline(Tst_1$pl_eqt, col = "steelblue", lwd = 2)
qqline(Tst_1$pl_eqt, col = "red", lwd = 2)
hist(Tst_1$pl_eqt,col="red")
hist(Tst_2$pl_eqt,col="blue")
qqnorm(Tst_2$pl_eqt, pch = 1, frame = FALSE)
qqline(my_data$len, col = "steelblue", lwd = 2)
ù
qqline(Tst_1$pl_eqt, col = "blue", lwd = 2)
summary(Tst_1$pl_eqt)
summary(Tst_2$pl_eqt)
summary(Tst_3$pl_eqt)
var(Tst_1$pl_eqt)
var(Tst_2$pl_eqt)
sapply(Tst_1,var)
Tst_1
Tst_1<-na.omit(Tst_1)
Tst_2<-na-omit(Tst_2)
Tst_2<-na.omit(Tst_2)
Tst_3<-na.omit(Tst_3)
var(Tst_1)
Tst_1
var(Tst_1$pl_eqt)
var(Tst_2$pl_eqt)
var(Tst_3$pl_eqt)
save.image("C:\\Users\\giovi\\OneDrive - Politecnico di Milano\\Esopianeti\\.RData")
q()
ls()
var(Tst_1)
z.test()
z.stat()
summary()
install.packages("devtools", dependencies = TRUE) 
devtools::has_devel()
devtools::install_github('alanarnholt/BSDA')
z.test()
save.image("C:\\Users\\giovi\\OneDrive - Politecnico di Milano\\Esopianeti\\.RData")
z.test(Tst_1)
q()
z.test()
devtools::has_devel()
devtools::install_github('alanarnholt/BSDA')
z.tesz.test(x, y = NULL, alternative = "two.sided", mu = 0, sigma.x = NULL,
  sigma.y = NULL, conf.level = 0.95)
z.test(x, y = NULL, alternative = "two.sided", mu = 0, sigma.x = NULL,
  sigma.y = NULL, conf.level = 0.95)
Nascar
library("BSDA")
z.test
function (x, y = NULL, alternative = "two.sided", mu = 0, 
z.test(Tst_1,Tst_2,alternative="greater",mu=0,sigma.Tst_1=545.92,sima.Tst_2=674.4,conf.level=0.95)
z.test(Tst_1,Tst_2,alternative="greater",mu=0,sigma.Tst_1=545.92,sigma.Tst_2$pl_eqt=674.4,conf.level=0.95)
z.test(Tst_1,Tst_2,alternative="greater",mu=0,sigma.x=545.92,sima.y=674.4,conf.level=0.95)
z.test(Tst_1,Tst_2,alternative="greater",mu=0,sigma.x=545.92,sigma.y=674.4,conf.level=0.95)
z.test(Tst_1,Tst_3,alternative="greater",mu=0,sigma.x=545.92,sigma.y=868.16,conf.level=0.95)
 z.test(Tst_2,Tst_3,alternative="greater",mu=0,sigma.x=674.4,sigma.y=868.16,conf.level=0.95)
fix(P)
fix(P)
T_rv<-subset(P, discoverymethod="Radial Velocity", select=c(pl_eqt))
T_rv
na.omit(T_rv)
shapiro.test(T_rv)
shapiro.test(T_rv$pl_eqt)
qqplot(T_rv)
qqplot(T_rv$pl_eqt)
qqPlot(T_rv,distribution="norm")
library(BSDA)
qqPlot(T_rv,distribution="norm")
qqnorm(T_rv)
qqnorm(T_rv$pl_eqt)
qqline(T_rv$pl_eqt)
qqline(T_rv$pl_eqt,col="orange")
qqnorm(Tst_3$pl_eqt)
qqline(
qqline(T_rv$pl_eqt,col="orange")
d
qqline(Tst_3$pl_eqt,col="green")
hist(Tst_3$pl_eqt,col="green")
hist(T_rv$pl_eqt,col="orange")
T_rv
T_rv<-na.omit(T_rv)
T_rv
fix(P)
T_trans<-subset(P,discoverymethod="Transit",select=c(pl_eqt)
)
T_trans<-na.omit(T_trans)
T_trans
shapiro.test(T_trans$pl_eqt)
qqnorm(T_trans$pl_eqt)
save.image("C:\\Users\\giovi\\OneDrive - Politecnico di Milano\\Esopianeti\\ExoR")
q()
q()
